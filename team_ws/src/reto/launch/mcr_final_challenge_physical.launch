<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <include file="$(find ros_deep_learning)/launch/video_source.ros1.launch"></include>

  <node name="odometry" pkg="mini_challenge_2" type="wheelBasedDeadReckoning.py"/>

  <node name="detect_aruco" pkg="reto" type="detect_aruco_mcr_approach_physical.py" output="screen"/>  
  
  <node name="kalman_filter" pkg="reto" type="McrApproachKalmanFilterForPuzzlebot.py" output="screen"/>

  <node name="kalman_odometry" pkg="reto" type="KalmanPredictionStage.py" output="screen"/>

  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
	  <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>
	  <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
	  <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
	  <param name="frame_id"            type="string" value="laser"/>
	  <param name="inverted"            type="bool"   value="false"/>
	  <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

</launch>

